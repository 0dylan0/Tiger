@model Web.Models.SalesShipmentsDataModel
@{
    ViewBag.Title = "销售出货修改";
}

@using (Html.BeginForm("Edit", "SalesShipmentsData", FormMethod.Post, new { id = "Add", data_val = true }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.ID)
    @Html.HiddenFor(m => m.InventoryDataID)
    <div class="box box-solid">
        <div class="box-body">
            <div class="row">
                <div class="col-xs-12 col-sm-8 col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.GoodsName, new { @class = "control-label" })@RequiredTag()
                        <div class="input-group">
                            @Html.TextBoxFor(m => m.GoodsName, new { @class = "form-control", @readonly = "readonly" })
                            <span class="input-group-btn">
                                <button id="ShowSelectInventoryDataGoods" class="btn btn-default btn-flat" type="button"><i class="fa fa-ellipsis-h"></i></button>
                                <button id="DeleteSelectInventoryDataGoods" class="btn btn-default btn-flat" type="button" )><i class="fa fa-close"></i></button>
                            </span>
                        </div>
                        @Html.HiddenFor(m => m.GoodsID)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-xs-12 col-sm-6 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.GoodsType, new { @class = "control-label" })
                        @Html.DropDownListFor(m => m.GoodsType, Model.GoodsTypeList, T("未选择").Text.ToString(), new { @class = "form-control full-width " })
                        @Html.ValidationMessageFor(m => m.GoodsType)
                    </div>
                </div>
                <div class="col-xs-12 col-sm-6 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Specification, new { @class = "control-label" })
                        @Html.DropDownListFor(m => m.Specification, Model.SpecificationList, T("未选择").Text.ToString(), new { @class = "form-control full-width " })
                        @Html.ValidationMessageFor(m => m.Specification)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-xs-12 col-sm-6 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Brand, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.Brand, new { @class = "form-control ", @readonly = "readonly" })
                        @Html.ValidationMessageFor(m => m.Brand)
                    </div>
                </div>
                <div class="col-xs-12 col-sm-6 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Unit, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.Unit, new { @class = "form-control ", @readonly = "readonly" })
                        @Html.ValidationMessageFor(m => m.Unit)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-xs-12 col-sm-6 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.WarehouseName, new { @class = "control-label" })
                        @Html.DropDownListFor(m => m.WarehouseID, Model.WarehouseList, T("未选择").Text.ToString(), new { @class = "form-control full-width " })
                        @Html.HiddenFor(m => m.WarehouseName)
                        @Html.ValidationMessageFor(m => m.WarehouseID)
                    </div>
                </div>
                <div class="col-xs-12 col-sm-6 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Cost, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.Cost, new { @class = "kl-input-num  full-width" })
                        @Html.ValidationMessageFor(m => m.Cost)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-xs-12 col-sm-6 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Sum, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.Sum, new { @class = "kl-input-num  full-width" })
                        @Html.ValidationMessageFor(m => m.Sum)
                    </div>
                </div>
                <div class="col-xs-12 col-sm-6 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Profit, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.Profit, new { @class = "kl-input-num  full-width" })
                        @Html.ValidationMessageFor(m => m.Profit)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-xs-12 col-sm-6 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Quantity, new { @class = "control-label" })@RequiredTag()
                        @Html.TextBoxFor(m => m.Quantity, new { @class = "kl-input-num  full-width" })
                        @Html.HiddenFor(m => m.OldQuantity)
                        @Html.ValidationMessageFor(m => m.Quantity)
                    </div>
                </div>
                <div class="col-xs-12 col-sm-6 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.UnitPrice, new { @class = "control-label" })@RequiredTag()
                        @Html.TextBoxFor(m => m.UnitPrice, new { @class = "kl-input-num  full-width" })
                        @Html.ValidationMessageFor(m => m.UnitPrice)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-xs-12 col-sm-6 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ClientDataName, new { @class = "control-label" })@RequiredTag()
                        @Html.DropDownListFor(m => m.ClientDataID, Model.ClientDataList, T("未选择").Text.ToString(), new { @class = "form-control full-width " })
                        @Html.HiddenFor(m => m.ClientDataName)
                        @Html.ValidationMessageFor(m => m.ClientDataID)
                    </div>
                </div>

                <div class="col-xs-12 col-sm-6 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Freight, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.Freight, new { @class = "kl-input-num  full-width" })
                        @Html.ValidationMessageFor(m => m.Freight)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-xs-12 col-sm-6 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Date, new { @class = "control-label" })@RequiredTag()
                        @Html.KLDateTextBoxFor(m => m.Date, new { @class = "form-control kl-date-picker full-width" })
                        @Html.ValidationMessageFor(m => m.Date)
                    </div>
                </div>
            </div>
            <div class="row">
                @*<div class="col-xs-12 col-sm-6 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Total, new { @class = "control-label" })@RequiredTag()
                        @Html.TextBoxFor(m => m.Total, new { @class = "kl-input-num  full-width" })
                        @Html.ValidationMessageFor(m => m.Total)
                    </div>
                </div>*@

                <div class="col-xs-12 col-sm-10 col-md-8">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Remarks, new { @class = "control-label" })
                        @Html.TextAreaFor(m => m.Remarks, 5, 0, new { @class = "form-control " })
                        @Html.ValidationMessageFor(m => m.Remarks)
                    </div>
                </div>
            </div>
        </div>

        <div class="box-footer">
            <button id="submitChange" type="submit" class="btn btn-primary"><i class="fa fa-save"></i> 保存</button>
            <button type="button" id="Refund" class="btn btn-danger"><i class="fa fa-remove"></i> 退货</button>
            <a href="@Url.Action("Index")" class="btn btn-default"><i class="fa fa-undo"></i> 返回</a>
        </div>
    </div>
}
@helper RequiredTag()
{
    @Html.Partial("_RequiredTagPartial")
}

@section scripts{
@Html.Partial("_KendoDropdownListPartial")
@Html.Partial("_KendoDatePickerPartial")
@Html.Partial("_ModalSelectorPartial")
@Html.Partial("_KendoNumericTextBoxPartial")

    <script type="text/javascript">

        $("#ShowSelectInventoryDataGoods").on("click", onShowSelectInventoryDataGoodsClick);
        function onShowSelectInventoryDataGoodsClick() {
            $.klModal.showModal("库存商品信息选择器", false, true);

            $.ajax({
                url: "@Url.Action("SelectInventoryDataByRadio", "Common")",
                method: "POST",
                data: addAntiForgeryToken({
                    HotelCode: $("#HotelCode").val()
                }),
                beforeSend: $.klModal.displayModalLoadingInfo,
                success: function (data) {
                    $.klModal.addDataToModalBody(data);
                    $.klModal.hideModalLoadingInfoAndDisplayBody();
                }
            });
        }

        function setCustomer(data) {
            if (data) {
                $("#GoodsName").val(data.goodsName);
                $("#GoodsID").val(data.goodsID);
                $("#GoodsType").getKendoDropDownList().value(data.goodsType);
                $("#OldQuantity").val(data.inventoryQuantity);
                $("#Brand").val(data.brand);
                $("#Specification").getKendoDropDownList().value(data.specification);
                $("#Cost").getKendoNumericTextBox().value(data.costPrice);
                $("#Unit").val(data.unit);
                $("#WarehouseID").getKendoDropDownList().value(data.warehouseID);
                $("#WarehouseName").val(data.warehouseName);
                $("#InventoryDataID").val(data.id);
            }
            else {
                $("#GoodsName").val("");
                $("#GoodsID").val("");
                $("#GoodsType").getKendoDropDownList().value("");
                $("#OldQuantity").val("");
                $("#Brand").val("");
                $("#Specification").getKendoDropDownList().value("");
                $("#Cost").getKendoNumericTextBox().value("");
                $("#Unit").val("");
                $("#WarehouseID").getKendoDropDownList().value("");
                $("#WarehouseName").val("");
                $("#InventoryDataID").val("");
            }
        }

        $(function () {
            $("#Quantity").kendoNumericTextBox({
                decimals: 0,
                format: "0",
                min: 0,
                max: 50000
            });

            $("#UnitPrice").kendoNumericTextBox({
                format: "c",
                decimals: 2,
                min: 0
            });
            $("#Sum").kendoNumericTextBox({
                format: "c",
                decimals: 2,
                min: 0
            });

            $("#Freight").kendoNumericTextBox({
                format: "c",
                decimals: 2,
                min: 0
            });

            $("#Cost").kendoNumericTextBox({
                format: "c",
                decimals: 2,
                min: 0
            });

            $("#Profit").kendoNumericTextBox({
                format: "c",
                decimals: 2
            });
            
            $("#Quantity").change(function () {
                Sum();
                Profit();
            })
            $("#UnitPrice").change(function () {
                Sum();
                Profit();
            })
            $("#Freight").change(function () {
                Sum();
                Profit();
            });

            $("#Cost").change(function () {
                Profit();
            });

            function Sum() {
                $("#Sum").getKendoNumericTextBox().value((parseInt($("#Quantity").val()) * parseFloat($("#UnitPrice").val())) + parseFloat($("#Freight").val()));
            }

            function Profit()
            {
                $("#Profit").getKendoNumericTextBox().value(parseFloat($("#Sum").val()) - parseFloat($("#Cost").val()) * parseInt($("#Quantity").val()) - parseFloat($("#Freight").val()));
            }

            $("#ClientDataID").on("change", function () {
                $("#ClientDataName").val($("#ClientDataID").getKendoDropDownList().text());
            })

            $("#GoodsType").getKendoDropDownList().readonly();
            $("#Specification").getKendoDropDownList().readonly();
            $("#WarehouseID").getKendoDropDownList().readonly();
            $("#Cost").getKendoNumericTextBox().readonly();
            $("#Sum").getKendoNumericTextBox().readonly();
            $("#Profit").getKendoNumericTextBox().readonly();

        });

        $("#Refund").click(function (e) {
            alertify.klConfirm("确定需要退货？", function () {
                location.href = '@Html.Raw(Url.Action("Refund", new { id = Model.ID, inventoryDataID = Model.InventoryDataID, quantity = Model.Quantity}))'
            });
        });
    </script>
}

